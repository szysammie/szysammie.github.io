[{"title":"如何导出微助教上的题","date":"2019-12-16T04:50:15.000Z","path":"/posts/6acf1d20/","text":"&#x6211;&#x53C8;&#x56DE;&#x6765;&#x4E86;&#x5982;&#x679C;&#x4E0D;&#x8BF4;&#x7684;&#x8BDD; &#x8FD9;&#x535A;&#x5BA2;&#x5DF2;&#x7ECF;&#x5F88;&#x4E45;&#x5F88;&#x4E45;&#x6CA1;&#x66F4;&#x65B0;&#x8FC7;&#x4E86; &#x539F;&#x56E0;&#x662F;&#x4E00;&#x76F4;&#x4EE5;&#x6765;&#x90FD;&#x6709;&#x4E8B;&#x60C5;&#xFF08;&#x505A;&#x9879;&#x76EE;&#xFF09; &#x5B9E;&#x5728;&#x662F;&#x62BD;&#x4E0D;&#x5F00;&#x8EAB; &#x5176;&#x5B9E;&#x6211;&#x672C;&#x5730;&#x4E5F;&#x6709;&#x51E0;&#x7BC7;&#x5199;&#x4E86;&#x7684;&#x6587;&#x7AE0; &#x4F46;&#x662F;&#x73B0;&#x5728;&#x770B;&#x6765;&#x7740;&#x5B9E;&#x62C9;&#x95F8; &#x6240;&#x4EE5;&#x5C31;&#x4E0D;&#x6253;&#x7B97;&#x63A8;&#x4E0A;&#x6765;&#x4E86; &#x73B0;&#x5728;&#x5728;&#x51C6;&#x5907;&#x8003;&#x7814; &#x76EE;&#x6807;&#x7684;&#x8BDD; &#x5148;&#x5B9A;&#x4E2A;&#x897F;&#x5357;&#x4EA4;&#x5927;&#x5427; &#x62C9;&#x95F8;&#x4E86;&#x518D;&#x8BF4; &#x7814;&#x7A76;&#x65B9;&#x5411;&#x4E3B;&#x8981;&#x5B9A;&#x5728;&#x5927;&#x6570;&#x636E; &#x6216;&#x8005;&#x662F;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x4E0A; (&#x5B9E;&#x5728;&#x662F;&#x4E0D;&#x592A;&#x60F3;&#x505A;&#x4F20;&#x7EDF;&#x5F00;&#x53D1;&#x4E86;) &#x4E8B;&#x60C5;&#x8D77;&#x56E0;&#x5FEB;&#x8003;&#x8BD5;&#x4E86; &#x5F88;&#x7D27;&#x5F20; &#x6240;&#x4EE5;&#x6211;&#x9700;&#x8981;&#x590D;&#x4E60;&#x8D77;&#x6765; &#x7279;&#x522B;&#x662F;&#x505A;&#x7684;&#x7EC3;&#x4E60;&#x9898; &#x4F46;&#x662F;&#x9898;&#x90FD;&#x662F;&#x5728;&#x5FAE;&#x52A9;&#x6559;&#x4E0A; &#x800C;&#x4E14;&#x8001;&#x5E08;&#x8BF4;&#x6CA1;&#x6CD5;&#x5BFC;&#x51FA;&#x6765; &#x5728;&#x624B;&#x673A;&#x4E0A;&#x770B;&#x56E0;&#x4E3A;&#x65E2;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x7B54;&#x6848; &#x53C8;&#x6709;&#x6B63;&#x786E;&#x7B54;&#x6848; &#x6240;&#x4EE5;&#x5F88;&#x9EBB;&#x70E6; &#x6211;&#x5C31;&#x60F3;&#x628A;&#x4ED6;&#x722C;&#x4E0B;&#x6765; &#x7136;&#x540E;&#x5BFC;&#x51FA;&#x5230;word&#x6587;&#x6863;&#x91CC; &#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#x7531;&#x4E8E;&#x5FAE;&#x52A9;&#x6559;&#x662F;&#x4E00;&#x4E2A;&#x5FAE;&#x4FE1;&#x7F51;&#x9875; &#x7406;&#x8BBA;&#x4E0A;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x4F1A;&#x88AB;&#x62E6;&#x622A;&#x6389; &#x6240;&#x4EE5;&#x6211;&#x7B2C;&#x4E00;&#x6B65;&#x60F3;&#x7684;&#x662F;&#x6293;&#x5305;&#x53BB;&#x770B;&#x5730;&#x5740; &#x4F46;&#x662F;&#x540E;&#x9762;&#x89C9;&#x5F97;&#x592A;&#x9EBB;&#x70E6; &#x8FD8;&#x8981;&#x5F04;&#x5230;&#x4E00;&#x4E2A;&#x5C40;&#x57DF;&#x7F51;&#x4E0B; &#x6240;&#x4EE5;&#x6211;&#x53C8;&#x60F3;&#x901A;&#x8FC7;&#x5FAE;&#x52A9;&#x6559;&#x7684;PC&#x7F51;&#x7AD9;&#x53BB;&#x770B;&#x4E0B;&#x5730;&#x5740; &#x7ED3;&#x679C;&#x6211;&#x53D1;&#x73B0;&#x4ED6;PC&#x7AEF;&#x53EA;&#x6709;&#x8001;&#x5E08;&#x53EF;&#x4EE5;&#x767B;&#x5F55; &#x4E8E;&#x662F;&#x6211;&#x60F3;&#x5230;&#x4E86;&#x5229;&#x7528;&#x5FAE;&#x4FE1;&#x7F51;&#x9875;&#x7AEF;&#x7684;&#x505A;&#x6CD5; &#x4F46;&#x662F;&#x540E;&#x9762;&#x53D1;&#x73B0;&#x8FD8;&#x662F;&#x4E0D;&#x884C; &#x56E0;&#x4E3A;&#x5FAE;&#x4FE1;&#x7F51;&#x9875;&#x7AEF;&#x4E0D;&#x80FD;&#x770B;&#x5230;&#x516C;&#x4F17;&#x53F7; &#x89E3;&#x51B3;&#x65B9;&#x6848;&#x6700;&#x540E;&#x6211;&#x627E;&#x5230;&#x4E86;&#x5FAE;&#x4FE1;&#x7684;PC&#x7AEF; pc&#x7AEF;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x4E8B;&#x60C5;&#x5C31;&#x662F;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x6E90;&#x4EE3;&#x7801; &#x8FD9;&#x6837;&#x5C31;&#x80FD;&#x627E;&#x5230;&#x5730;&#x5740;&#x4E86; &#x540E;&#x9762;&#x7684;112&#x662F;&#x8BFE;&#x53F7; 139&#x90E8;&#x5206;&#x662F;&#x8BD5;&#x5377;&#x53F7; &#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x6709;&#x4E2A;&#x95EE;&#x9898; &#x5C31;&#x662F;&#x7531;&#x4E8E;&#x662F;&#x5FAE;&#x4FE1;&#x6388;&#x6743;&#x8BBF;&#x95EE;&#x7684; &#x6240;&#x4EE5;&#x76F4;&#x63A5;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E0A;&#x9762;&#x8BBF;&#x95EE;&#x4F1A;&#x663E;&#x793A;&#x9519;&#x8BEF; &#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5176;&#x5B9E;&#x662F;&#x6CA1;&#x6709;&#x767B;&#x5F55;&#x7684; &#x4F46;&#x662F;&#x6211;&#x53D1;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x6709;&#x610F;&#x601D;&#x7684;&#x4E1C;&#x897F;&#x5C31;&#x662F;&#x5FAE;&#x4FE1;&#x7684;pc&#x7AEF;&#x53EF;&#x4EE5;&#x5141;&#x8BB8;&#x628A;&#x9875;&#x9762;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E0A;&#x6253;&#x5F00; &#x7136;&#x540E;&#x53BB;&#x770B;&#x4E0B;&#x8BF7;&#x6C42; &#x5C31;&#x5F88;&#x5BB9;&#x6613;&#x5F97;&#x5230;&#x4E86; &#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5B9E;&#x9645;&#x4E0A;&#x4ED6;&#x662F;&#x505A;&#x4E86;&#x5206;&#x9875; &#x540C;&#x65F6;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x5C31;&#x662F;&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#x662F;&#x6BCF;&#x9694;2&#x4E2A;&#x5C0F;&#x65F6;&#x8FDB;&#x884C;&#x5BC6;&#x5319;&#x66F4;&#x6362;&#x7684; &#x6240;&#x4EE5;&#x4ED6;&#x7684;openid&#x4E0D;&#x662F;&#x5FAE;&#x4FE1;&#x7684;&#x90A3;&#x4E2A;openid &#x800C;&#x662F;&#x4ED6;&#x81EA;&#x5DF1;&#x751F;&#x6210;&#x7684; &#x5E76;&#x4E14;&#x662F;&#x5E26;&#x6709;&#x65F6;&#x9650;&#x7684; &#x6700;&#x540E;&#x4ECE;&#x8FD4;&#x56DE;&#x7684;&#x7ED3;&#x679C;&#x4E2D;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230; type&#x662F;&#x8BD5;&#x9898;&#x7684;&#x7C7B;&#x578B; 1&#x662F;&#x5355;&#x9009; 2&#x662F;&#x591A;&#x9009; 3&#x662F;&#x5224;&#x65AD; 4&#x662F;&#x586B;&#x7A7A; &#x800C;&#x4E14;&#x6240;&#x6709;&#x7684;&#x7B54;&#x6848;&#x6570;&#x636E;&#x90FD;&#x5728;answerContene&#x4E2D; Ok &#x5230;&#x8FD9;&#x91CC;&#x5C31;&#x80FD;&#x62FF;&#x5230;&#x6240;&#x6709;&#x6570;&#x636E;&#x7684; &#x5BFC;&#x51FA;&#x5230;word&#x6587;&#x6863;&#x91CC;&#x7531;&#x4E8E;&#x65F6;&#x95F4;&#x592A;&#x7D27; &#x6240;&#x4EE5;&#x6211;&#x4F7F;&#x7528;java&#x5199;&#x7684; &#x800C;&#x4E14;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x7406;&#x89E3; &#x6211;&#x6709;&#x4E9B;&#x5730;&#x65B9;&#x53D8;&#x91CF;&#x7528;&#x7684;&#x62FC;&#x97F3;&#xFF08;&#x5E73;&#x65F6;&#x6211;&#x4E00;&#x822C;&#x4E0D;&#x8FD9;&#x4E48;&#x505A;&#xFF09; &#x7528;&#x7684;poi&#x5199;&#x7684; &#x89E3;&#x6790;json&#x7528;&#x7684;&#x963F;&#x91CC;&#x7684;fastJSON &#x8FD8;&#x6709;&#x89E3;&#x6790;&#x6587;&#x6863;&#x7684;Jsoup &#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x6211;&#x90FD;&#x653E;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x6587;&#x6863;&#x91CC;&#x9762; &#x5199;&#x7684;controller&#x5C42; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224package com.szy.wechat.controller;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONArray;import com.alibaba.fastjson.JSONObject;import com.szy.wechat.service.TestService;import com.szy.wechat.utils.HttpUtils;import org.apache.poi.poifs.filesystem.DirectoryEntry;import org.apache.poi.poifs.filesystem.DirectoryNode;import org.apache.poi.poifs.filesystem.DocumentEntry;import org.apache.poi.poifs.filesystem.POIFSFileSystem;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.*;import java.util.HashMap;import java.util.List;@RestController@RequestMapping(&quot;/test/wzj&quot;)public class TestController { @Autowired private TestService testService; @Autowired private HttpUtils httpUtils; @GetMapping public void insert(HttpServletRequest request, HttpServletResponse response){ HashMap&lt;String, String&gt; header = new HashMap&lt;&gt;(); header.put(&quot;Cookie&quot;,&quot;UM_distinctid=16f070a85fa3a8-0e43fd216e6dd9-2393f61-1fa400-16f070a85fbd2b; CNZZDATA1258955147=1384001563-1576367302-%7C1576466494; session=eyJvcGVuSWQiOiIxMTUzNjM0MTU4YzFkYjNmMTMzNmYyMWU4MmU3NzA0NCJ9; session.sig=-5WoL80rGho7GUMmLRT1MVPqzcw&quot;); header.put(&quot;Host&quot;,&quot;v18.teachermate.cn&quot;); header.put(&quot;openId&quot;,&quot;1153634158c1db3f1336f21e82e77044&quot;); header.put(&quot;Referer&quot;,&quot;http://v18.teachermate.cn/wechat-pro-ssr/student/answer-questions/1121350/papers/&quot;+id+&quot;?isWrongQuesPage=&quot;); int count = 0; StringBuilder shifei = new StringBuilder(); StringBuilder danxuan = new StringBuilder(); StringBuilder tiankong = new StringBuilder(); StringBuilder duoxuan = new StringBuilder(); for (int i = 0; i &lt; 9; i++) { String s = httpUtils.doGetHeader(&quot;http://v18.teachermate.cn/wechat-api/v3/students/papers/&quot;+id+&quot;/questions?page=&quot; + i, header); JSONArray objects = JSON.parseArray(s); for (int i1 = 0; i1 &lt; objects.size(); i1++) { JSONObject jsonObject = objects.getJSONObject(i1); int type = jsonObject.getInteger(&quot;type&quot;).intValue(); if (type==1){ //&#x5355;&#x9009; count++; danxuan.append(jsonObject.getString(&quot;content&quot;).replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p style=&apos;color:#0033FF&apos;&gt;&quot;+count+&quot;. &quot;)+&quot;&lt;br&gt;&quot;); JSONArray answerContent = jsonObject.getJSONArray(&quot;answerContent&quot;); for (int i2 = 0; i2 &lt; answerContent.size(); i2++) { JSONObject danxuanitem = answerContent.getJSONObject(i2); String content = danxuanitem.getString(&quot;content&quot;); Boolean answer = danxuanitem.getBoolean(&quot;answer&quot;); if (answer){ switch (i2){ case 0: danxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p style=&apos;color:red&apos;&gt;A &quot;)); break; case 1: danxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p style=&apos;color:red&apos;&gt;B &quot;)); break; case 2: danxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p style=&apos;color:red&apos;&gt;C &quot;)); break; case 3: danxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p style=&apos;color:red&apos;&gt;D &quot;)); break; default: break; } }else { switch (i2){ case 0: danxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p&gt;A &quot;)); break; case 1: danxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p&gt;B &quot;)); break; case 2: danxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p&gt;C &quot;)); break; case 3: danxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p&gt;D &quot;)); break; default: break; } } } }else if (type==3){ //&#x662F;&#x975E; count++; shifei.append(jsonObject.getString(&quot;content&quot;).replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p style=&apos;color:#0033FF&apos;&gt;&quot;+count+&quot;. &quot;)+&quot;&lt;br&gt;&quot;); JSONArray answerContent = jsonObject.getJSONArray(&quot;answerContent&quot;); JSONObject shifeiAnswer = answerContent.getJSONObject(0); shifei.append(&quot;&lt;p style=&apos;color:red&apos;&gt;&quot;+shifeiAnswer.getString(&quot;content&quot;)+&quot;&lt;/p&gt;&quot;); }else if (type==4){ //&#x586B;&#x7A7A; count++; tiankong.append(jsonObject.getString(&quot;content&quot;).replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p style=&apos;color:#0033FF&apos;&gt;&quot;+count+&quot;. &quot;)+&quot;&lt;br&gt;&quot;); JSONArray answerContent = jsonObject.getJSONArray(&quot;answerContent&quot;); for (int i2 = 0; i2 &lt; answerContent.size(); i2++) { JSONObject tiankongitem = answerContent.getJSONObject(i2); String content = tiankongitem.getString(&quot;content&quot;); switch (i2){ case 0: tiankong.append(&quot;&#x2460; &quot;+content.replace(&quot;[&quot;,&quot;&quot;).replace(&quot;]&quot;,&quot;&quot;).replace(&quot;\\&quot;&quot;,&quot;&quot;)+&quot;&lt;br&gt;&quot;); break; case 1: tiankong.append(&quot;&#x2461; &quot;+content.replace(&quot;[&quot;,&quot;&quot;).replace(&quot;]&quot;,&quot;&quot;).replace(&quot;\\&quot;&quot;,&quot;&quot;)+&quot;&lt;br&gt;&quot;); break; case 2: tiankong.append(&quot;&#x2462; &quot;+content.replace(&quot;[&quot;,&quot;&quot;).replace(&quot;]&quot;,&quot;&quot;).replace(&quot;\\&quot;&quot;,&quot;&quot;)+&quot;&lt;br&gt;&quot;); break; case 3: tiankong.append(&quot;&#x2463; &quot;+content.replace(&quot;[&quot;,&quot;&quot;).replace(&quot;]&quot;,&quot;&quot;).replace(&quot;\\&quot;&quot;,&quot;&quot;)+&quot;&lt;br&gt;&quot;); break; default: break; } } }else { //&#x591A;&#x9009; count++; duoxuan.append(jsonObject.getString(&quot;content&quot;).replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p style=&apos;color:#0033FF&apos;&gt;&quot;+count+&quot;. &quot;)+&quot;&lt;br&gt;&quot;); JSONArray answerContent = jsonObject.getJSONArray(&quot;answerContent&quot;); for (int i2 = 0; i2 &lt; answerContent.size(); i2++) { JSONObject danxuanitem = answerContent.getJSONObject(i2); String content = danxuanitem.getString(&quot;content&quot;); Boolean answer = danxuanitem.getBoolean(&quot;answer&quot;); if (answer){ switch (i2){ case 0: duoxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p style=&apos;color:red&apos;&gt;A &quot;)); break; case 1: duoxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p style=&apos;color:red&apos;&gt;B &quot;)); break; case 2: duoxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p style=&apos;color:red&apos;&gt;C &quot;)); break; case 3: duoxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p style=&apos;color:red&apos;&gt;D &quot;)); break; default: break; } }else { switch (i2){ case 0: duoxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p&gt;A &quot;)); break; case 1: duoxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p&gt;B &quot;)); break; case 2: duoxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p&gt;C &quot;)); break; case 3: duoxuan.append(content.replace(&quot;&lt;p&gt;&quot;,&quot;&lt;p&gt;D &quot;)); break; default: break; } } } } } } try { String con = &quot;&lt;html&gt;&lt;body&gt;&quot;+danxuan.toString()+duoxuan.toString()+&quot;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&quot;+&quot;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&quot;+shifei.toString()+&quot;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&quot;+tiankong.toString()+&quot;&lt;/body&gt;&lt;/html&gt;&quot;; byte[] bytes = con.getBytes(&quot;utf-8&quot;); ByteArrayInputStream baisk = new ByteArrayInputStream(bytes); POIFSFileSystem poifsFileSystem = new POIFSFileSystem(); DirectoryNode directory = poifsFileSystem.getRoot(); try { DocumentEntry documentEntry = directory.createDocument(&quot;&#x4F5C;&#x4E1A;1&quot;, baisk); request.setCharacterEncoding(&quot;utf-8&quot;); response.setContentType(&quot;application/msword&quot;);//&#x5BFC;&#x51FA;word&#x683C;&#x5F0F; response.addHeader(&quot;Content-Disposition&quot;, &quot;p_w_upload;filename=&quot; + new String( (documentEntry.getName() + &quot;.doc&quot;).getBytes(), &quot;iso-8859-1&quot;)); OutputStream ostream = response.getOutputStream(); poifsFileSystem.writeFilesystem(ostream); baisk.close(); ostream.close(); } catch (IOException e) { e.printStackTrace(); } } catch (UnsupportedEncodingException e) { e.printStackTrace(); } }} &#x56E0;&#x4E3A;&#x65F6;&#x95F4;&#x592A;&#x4ED3;&#x4FC3;&#x4E86; &#x4EE3;&#x7801;&#x5199;&#x7684;&#x6BD4;&#x8F83;low &#x5F88;&#x591A;&#x5730;&#x65B9;&#x4E5F;&#x6CA1;&#x5199;&#x6210;&#x52A8;&#x6001;&#x7684; &#x6240;&#x4EE5;&#x4EE3;&#x7801;&#x5927;&#x5BB6;&#x53C2;&#x8003;&#x4E00;&#x4E0B;&#x5373;&#x53EF; &#x6211;&#x4E5F;&#x662F;&#x56FE;&#x65B9;&#x4FBF; &#x80FD;&#x7528;&#x5C31;&#x884C; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"爬虫","slug":"爬虫","permalink":"http://b.sammie.top/tags/爬虫/"}]},{"title":"爬取优品网2000套PPT","date":"2019-05-29T06:04:25.000Z","path":"/posts/82acb19c/","text":"&#x8D77;&#x56E0;&#x4E3B;&#x8981;&#x662F;&#x56E0;&#x4E3A;&#x6700;&#x8FD1;&#x5728;&#x641E;&#x722C;&#x866B; &#x7B2C;&#x4E8C;&#x4E2A;&#x662F;&#x56E0;&#x4E3A;&#x6700;&#x8FD1;&#x9700;&#x8981;&#x7528;ppt&#x53C8;&#x61D2;&#x5F97;&#x4E00;&#x5957;&#x4E00;&#x5957;&#x7684;&#x4E0B;&#xFF0C;&#x6240;&#x4EE5;&#x51C6;&#x5907;&#x722C;&#x4E00;&#x4E9B;&#x514D;&#x8D39;&#x7684;ppt&#x4E0B;&#x6765;. &#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#x722C;&#x866B;&#x7684;&#x7B80;&#x5355;&#x4F7F;&#x7528;&#x5DF2;&#x7ECF;&#x5728;&#x4E0A;&#x4E00;&#x7BC7;&#x535A;&#x5BA2;&#x91CC;&#x8BB2;&#x5230;&#x4E86;&#xFF0C;&#x8FD9;&#x6B21;&#x5C31;&#x60F3;&#x6765;&#x70B9;&#x504F;&#x5B9E;&#x6218;&#x7684;&#xFF0C;&#x672C;&#x6765;&#x9AD8;&#x5927;&#x4F6C;&#x5DF2;&#x7ECF;&#x5199;&#x597D;&#x4E86;&#x7AD9;&#x957F;&#x4E4B;&#x5BB6;&#x7684;&#x722C;&#x53D6;&#x65B9;&#x5F0F;&#xFF0C;&#x76F4;&#x63A5;&#x7528;java&#x5B9E;&#x73B0;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#xFF01;&#x6211;&#x53D1;&#x73B0;&#x7AD9;&#x957F;&#x4E4B;&#x5BB6;&#x4E0D;&#x514D;&#x8D39;&#x4E86;&#x3002;&#x3002;&#x3002;emmm &#x5F88;&#x96BE;&#x53D7; &#x6240;&#x4EE5;&#x53EA;&#x80FD;&#x6362;&#x4E00;&#x4E2A;&#x4E86; &#x4E8E;&#x662F;&#x6211;&#x627E;&#x5230;&#x4E86;&#x4F18;&#x54C1;&#x7F51; &#x8C8C;&#x4F3C;&#x8FD8;&#x53EF;&#x4EE5; &#x800C;&#x4E14;&#x662F;&#x514D;&#x8D39;&#x7684; &#x90A3;&#x4E48; &#x6309;&#x7167;&#x9AD8;&#x5927;&#x4F6C;&#x7684;&#x65B9;&#x5F0F; &#x5E94;&#x8BE5;&#x770B;&#x4E0B;&#x8FD9;&#x4E9B;&#x7F29;&#x7565;&#x56FE;&#x548C;&#x4E0B;&#x8F7D;&#x94FE;&#x63A5;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#x6CA1; &#x770B;&#x4E86;&#x4E00;&#x4E0B; &#x6CA1;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#x3002;&#x3002;&#x3002;&#x9760; &#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;&#x7F29;&#x7565;&#x56FE;&#xFF1A;/uploads/allimg/181104/1-1Q104144T30-L.jpg &#x200B; &#x4E0B;&#x8F7D;&#x5730;&#x5740;:http://www.youpinppt.com/soft/181104/1-1Q104144Q6.rar &#x5C45;&#x7136;&#x6CA1;&#x4EC0;&#x4E48;&#x5173;&#x7CFB; &#x6211;&#x76F4;&#x63A5;&#x61F5;&#x903C;&#x4E86; &#x8FD9;&#x600E;&#x4E48;&#x529E;&#x5462; &#x8BB2;&#x9053;&#x7406;&#x5982;&#x679C;&#x6211;&#x662F;&#x5F00;&#x53D1;&#x4EBA;&#x5458; &#x6211;&#x5E94;&#x8BE5;&#x9700;&#x8981;&#x4E2A;&#x4E1C;&#x897F;&#x6765;&#x8BB0;&#x5F55;&#x8FD9;&#x4E2A;ppt &#x6BD4;&#x5982;&#x7ED9;&#x4E2A;&#x7F16;&#x53F7;&#x4EC0;&#x4E48;&#x7684; &#x7ECF;&#x8FC7;&#x6211;&#x7684;&#x89C2;&#x5BDF; &#x6211;&#x53D1;&#x73B0;&#x5728;&#x4E0B;&#x8F7D;&#x5730;&#x5740;&#x7684;&#x65F6;&#x5019;&#x7ED9;&#x4E86;&#x4E00;&#x4E2A; aid &#x8FD9;&#x4E2A;aid &#x5C31;&#x662F;&#x5728;&#x7F29;&#x7565;&#x56FE;&#x7684;&#x5916;&#x5C42;A&#x6807;&#x7B7E;&#x4E0A; &#x6240;&#x4EE5;&#x53EA;&#x8981;&#x80FD;&#x641E;&#x5230;&#x8FD9;&#x4E2A; aid&#x5C31;&#x80FD;&#x4E0B;&#x8F7D;&#x5566; &#x800C;&#x4E14;&#x6211;&#x53D1;&#x73B0;&#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x7AD9;&#x70B9;&#x6CA1;&#x6709;&#x505A;&#x62E6;&#x622A; &#x6240;&#x4EE5;&#x76F4;&#x63A5;&#x722C;&#x6765;&#x4E0B;&#x5C31;&#x53EF;&#x4EE5;&#x4E86; &#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;5231&#x8FD9;&#x4E2A;id&#x53F7;&#x6709;&#x53EF;&#x80FD;&#x662F;&#x4E24;&#x4F4D;&#x6570;&#x6216;&#x8005;&#x4E09;&#x4F4D;&#x6570;&#x7684; &#x6240;&#x4EE5;&#x6211;&#x5728;&#x540E;&#x9762;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x91CC;&#x505A;&#x4E86;&#x5904;&#x7406; &#x8FD8;&#x6709;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x4E0B;&#x8F7D;&#x94FE;&#x63A5; &#x6709;&#x5F97;&#x94FE;&#x63A5;&#x653E;&#x7684;&#x5730;&#x65B9;&#x662F;uoload&#x5F00;&#x5934;&#x7684; &#x4F46;&#x662F;&#x5B9E;&#x9645;&#x4E0A;&#x8FD9;&#x4E2A;&#x662F;&#x9519;&#x8BEF;&#x5730;&#x5740; &#x6B63;&#x786E;&#x7684;&#x4E0B;&#x8F7D;&#x5730;&#x5740;&#x662F;soft&#x5F00;&#x5934;(&#x4F30;&#x8BA1;&#x662F;&#x6570;&#x636E;&#x79FB;&#x690D;&#x5230;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x7AD9;&#x70B9;) &#x4EE3;&#x7801;&#x5173;&#x4E8E;&#x722C;&#x866B;&#x7684;&#x57FA;&#x7840;&#x7406;&#x8BBA;&#x6211;&#x5728;&#x4E0A;&#x4E00;&#x7BC7;&#x535A;&#x5BA2;&#x5DF2;&#x7ECF;&#x8BB2;&#x8FC7;&#x4E86; &#x8FD9;&#x91CC;&#x5C31;&#x76F4;&#x63A5;&#x8D34;&#x4EE3;&#x7801;&#x4E86; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113package com.sammie.top.test;import org.apache.http.client.methods.CloseableHttpResponse;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.utils.URIBuilder;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClients;import org.apache.http.util.EntityUtils;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import org.jsoup.nodes.Element;import org.jsoup.select.Elements;import java.io.IOException;import java.net.URISyntaxException;import java.sql.Connection;import java.sql.DriverManager;import java.sql.PreparedStatement;import java.sql.SQLException;public class zzCrawler { static String s = &quot;&quot;; public static void main(String[] args) throws Exception { String baseUrl = &quot;http://www.ypppt.com/moban/list-&quot;; ppt p = new ppt(); for (int i = 2; i &lt; 100; i++) { doCrawler(baseUrl+i+&quot;.html&quot;,p); } } private static Connection getConn() { String driver = &quot;com.mysql.cj.jdbc.Driver&quot;; String url = &quot;jdbc:mysql://localhost:3306/test?characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=UTC&quot;; String username = &quot;root&quot;; String password = &quot;123456&quot;; Connection conn = null; try { Class.forName(driver); //classLoader,&#x52A0;&#x8F7D;&#x5BF9;&#x5E94;&#x9A71;&#x52A8; try { conn = (Connection) DriverManager.getConnection(url, username, password); } catch (SQLException e) { e.printStackTrace(); } } catch (ClassNotFoundException e) { e.printStackTrace(); } return conn; } public static void doCrawler(String CrawlerUrl,ppt p) throws URISyntaxException { CloseableHttpClient httpClient = HttpClients.createDefault(); URIBuilder url = new URIBuilder(CrawlerUrl); //&#x5982;&#x9700;&#x6DFB;&#x52A0;&#x53C2;&#x6570; &#x53EF;&#x4EE5;&#x4F7F;&#x7528;url.setParameter(key,val)&#x65B9;&#x6CD5; HttpGet httpGet = new HttpGet(url.build()); //&#x53D1;&#x8D77;&#x8BF7;&#x6C42; CloseableHttpResponse response = null; try { response = httpClient.execute(httpGet); if (response.getStatusLine().getStatusCode()==200){ String content = EntityUtils.toString(response.getEntity(), &quot;utf8&quot;); Document doc = Jsoup.parse(content); Elements elements = doc.select(&quot;.posts li&quot;); for (Element e : elements) { String attr = e.select(&quot;.p-title&quot;).attr(&quot;href&quot;).substring(14,18); if(attr.contains(&quot;.&quot;)){ attr = attr.replace(&quot;.&quot;, &quot;&quot;); if (attr.contains(&quot;h&quot;)){ attr = attr.replace(&quot;h&quot;,&quot;&quot;); } p.setLink(attr); } else{ p.setLink(attr); } String title = e.select(&quot;.p-title&quot;).text(); p.setTitle(title); CloseableHttpClient htp = HttpClients.createDefault(); HttpGet get = new HttpGet(&quot;http://www.ypppt.com/p/d.php?aid=&quot;+attr); CloseableHttpResponse execute = htp.execute(get); if (execute.getStatusLine().getStatusCode()==200){ String con = EntityUtils.toString(execute.getEntity(), &quot;utf8&quot;); Document parse = Jsoup.parse(con); Element li = parse.select(&quot;li&quot;).last(); String attr1 = li.select(&quot;a&quot;).attr(&quot;href&quot;); if (attr1.contains(&quot;uploads&quot;)){ attr1 = &quot;http://www.youpinppt.com&quot;+attr1.replace(&quot;uploads/&quot;,&quot;&quot;); } p.setDownloadUrl(attr1); insert(p); } } } } catch (IOException e) { e.printStackTrace(); } } private static int insert(ppt p) { Connection conn = getConn(); int i = 0; String sql = &quot;insert into ppt (title,link,downloadUrl) values(?,?,?)&quot;; PreparedStatement pstmt; try { pstmt = (PreparedStatement) conn.prepareStatement(sql); pstmt.setString(1, p.getTitle()); pstmt.setString(2, p.getLink()); pstmt.setString(3, p.getDownloadUrl()); i = pstmt.executeUpdate(); pstmt.close(); conn.close(); } catch (SQLException e) { e.printStackTrace(); } return i; }} &#x8FD9;&#x91CC;&#x722C;&#x53D6;&#x7684;&#x90FD;&#x662F;&#x4E0B;&#x8F7D;&#x94FE;&#x63A5; &#x7136;&#x540E;&#x6211;&#x5355;&#x72EC;&#x5F00;&#x4E86;&#x4E2A;&#x7C7B;&#x53BB;&#x4E0B;&#x8F7D; &#x6682;&#x65F6;&#x4E0B;&#x4E86;500&#x5957; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162package com.sammie.top.test;import org.apache.commons.io.FileUtils;import java.io.File;import java.net.URL;import java.sql.*;public class download { public static void main(String[] args) { getAll(); } private static Integer getAll() { Connection conn = getConn(); String sql = &quot;select * from ppt limit 500 &quot;; PreparedStatement pstmt; try { pstmt = (PreparedStatement)conn.prepareStatement(sql); ResultSet rs = pstmt.executeQuery(); while (rs.next()) { downloadHttpUrl(rs.getString(&quot;downloadUrl&quot;),&quot;E:/files/&quot;,rs.getString(&quot;title&quot;)+&quot;.rar&quot;); } } catch (SQLException e) { e.printStackTrace(); } return null; } public static void downloadHttpUrl(String url, String dir, String fileName) { try { URL httpurl = new URL(url); File dirfile = new File(dir); if (!dirfile.exists()) { dirfile.mkdirs(); } FileUtils.copyURLToFile(httpurl, new File(dir+fileName)); System.out.println(fileName+&quot;&#x4E0B;&#x8F7D;&#x5B8C;&#x6210;&#xFF01;&quot;); } catch (Exception e) { e.printStackTrace(); } } private static Connection getConn() { String driver = &quot;com.mysql.cj.jdbc.Driver&quot;; String url = &quot;jdbc:mysql://localhost:3306/test?characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=UTC&quot;; String username = &quot;root&quot;; String password = &quot;123456&quot;; Connection conn = null; try { Class.forName(driver); //classLoader,&#x52A0;&#x8F7D;&#x5BF9;&#x5E94;&#x9A71;&#x52A8; try { conn = (Connection) DriverManager.getConnection(url, username, password); } catch (SQLException e) { e.printStackTrace(); } } catch (ClassNotFoundException e) { e.printStackTrace(); } return conn; }} &#x7ED3;&#x8BED;&#x5076;&#x5076;&#x5076;&#x5076;&#x51EF;~ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"利用jsoup爬取大佬的博客内容","date":"2019-05-26T12:03:23.000Z","path":"/posts/d42e5ea2/","text":"&#x524D;&#x8A00;&#x6211;&#x53C8;&#x56DE;&#x6765;&#x4E86;&#xFF01;&#x7ECF;&#x8FC7;&#x4E86;&#x4E00;&#x957F;&#x4E32;&#x7684;&#x6BD4;&#x8D5B;&#x548C;&#x9879;&#x76EE;&#x4EE5;&#x540E;&#xFF0C;&#x6210;&#x529F;&#x7684;&#x953B;&#x70BC;&#x51FA;&#x4E86;Vue&#x548C;uni-app&#xFF0C;&#x611F;&#x89C9;&#x81EA;&#x5DF1;&#x8D70;&#x4E0A;&#x4E86;&#x5168;&#x6808;=&#x5168;&#x5E72;&#x7684;&#x4E0D;&#x5F52;&#x8DEF;,&#x4ECE;&#x73B0;&#x5728;&#x5F00;&#x59CB;&#x6211;&#x5C31;&#x8981;&#x505A;&#x540E;&#x7AEF;&#x5566;&#xFF0C;&#x6240;&#x4EE5;&#x4EE5;&#x540E;&#x7684;&#x6587;&#x7AE0;&#x66F4;&#x504F;&#x540E;&#x7AEF;&#x548C;&#x5B89;&#x5168;&#x4E00;&#x4E9B;&#x3002; &#x722C;&#x866B;&#x8FD9;&#x6B21;&#x4E3B;&#x8981;&#x662F;&#x521A;&#x56DE;&#x6765;&#xFF0C;&#x6240;&#x4EE5;&#x5F88;&#x591A;&#x77E5;&#x8BC6;&#x70B9;&#x90FD;&#x6709;&#x70B9;&#x5FD8;&#x4E86;&#xFF0C;&#x52A0;&#x4E0A;&#x4E0D;&#x5C11;&#x505A;java&#x7684;&#x540C;&#x5B66;&#x8BF4;&#x4E0D;&#x592A;&#x4F1A;&#x722C;&#x866B;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x505A;&#x4E00;&#x4E2A;demo&#xFF0C;&#x8BB2;&#x4E00;&#x4E0B;&#x57FA;&#x672C;&#x539F;&#x7406;&#x3002; &#x4EC0;&#x4E48;&#x662F;&#x722C;&#x866B;&#x5462;&#xFF1F; &#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4E00;&#x79CD;&#x53EF;&#x4EE5;&#x81EA;&#x52A8;&#x5316;&#x722C;&#x53D6;&#x7F51;&#x7EDC;&#x8D44;&#x6E90;&#x7684;&#x811A;&#x672C;&#x3002;&#x7528;python&#x5199;&#x662F;&#x6700;&#x65B9;&#x4FBF;&#x7684;&#xFF0C;java&#x8FD1;&#x5E74;&#x6765;&#x4E5F;&#x5F00;&#x6E90;&#x4E86;&#x4E00;&#x4E9B;&#x6846;&#x67B6;&#xFF0C;&#x603B;&#x7684;&#x8FD8;&#x8BF4;&#x8FD8;&#x884C;&#xFF0C;&#x4E0D;&#x7B97;&#x7279;&#x522B;&#x9EBB;&#x70E6;&#x3002; &#x722C;&#x866B;&#x539F;&#x7406;&#x722C;&#x866B;&#x7684;&#x539F;&#x7406;&#x4E3B;&#x8981;&#x662F;&#x4EE5;&#x4E0B;&#x6B65;&#x9AA4;&#xFF1A;&#x83B7;&#x53D6;html&#x9875;&#x9762;&#x6570;&#x636E;&#xFF0C;&#x89E3;&#x6790;&#x6807;&#x7B7E;&#xFF0C;&#x62FF;&#x5230;&#x6807;&#x7B7E;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x3002;&#x662F;&#x7684;&#xFF0C;&#x5C31;&#x662F;&#x8FD9;&#x4E48;&#x7B80;&#x5355;. &#x51C6;&#x5907;&#x9700;&#x8981;&#x4EE5;&#x4E0B;&#x7684;&#x5305;&#xFF08;&#x6211;&#x662F;&#x901A;&#x8FC7;maven&#x7BA1;&#x7406;&#x7684;&#xFF09; &#x76F4;&#x63A5;&#x5199;&#x5165;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x8981;&#x5199;&#x5165;&#x6587;&#x4EF6;&#xFF0C;&#x8FD8;&#x9700;&#x8981;commons-io&#x548C;commons-lang3 httpclient slf4j jsoup mysql-connector-java &#x5206;&#x6790;&#x5148;&#x6765;&#x770B;&#x770B;&#x5927;&#x4F6C;&#x7684;&#x535A;&#x5BA2;&#xFF08;&#x9B3C;&#x9B3C; &#x6216;&#x8BB8;&#x8FD9;&#x5C31;&#x662F;&#x5927;&#x4F6C;&#x5427;!&#xFF09; &#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6240;&#x6709;&#x6587;&#x7AE0;&#x7684;&#x94FE;&#x63A5;&#x90FD;&#x662F;&#x5728;/page/&#x9875;&#x7801;&#x6570; &#x6240;&#x4EE5;&#x8FD9;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x8981;&#x722C;&#x53D6;&#x7684;&#x94FE;&#x63A5; &#x901A;&#x8FC7;&#x5FAA;&#x73AF;&#x722C;&#x53D6;&#x6BCF;&#x4E00;&#x9875;&#x7684;&#x6570;&#x636E; cra &#x200B; &#x4F46;&#x662F;&#x2026;..&#x95EE;&#x9898;&#x5728;&#x4E8E;&#x9996;&#x9875;&#x662F;&#x4E00;&#x4E2A;&#x5217;&#x8868;&#x9879;&#xFF0C;&#x53EA;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x6587;&#x7AE0;&#x6570;&#x636E;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x505A;&#x7684;&#x662F;&#x62FF;&#x5230;&#x6240;&#x6709;&#x7684;title&#x548C;&#x5177;&#x4F53;&#x7684;&#x6587;&#x7AE0;&#x5185;&#x5BB9;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x80FD;&#x5148;&#x628A;&#x6807;&#x9898;&#x548C;&#x8BE6;&#x60C5;&#x94FE;&#x63A5;&#x5B58;&#x8D77;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x722C;&#x53D6;&#x8BE6;&#x60C5;&#x6570;&#x636E;. HttpClient1apache&#x5F00;&#x6E90;&#x7684;&#x4E00;&#x4E2A;http&#x8BF7;&#x6C42;&#x5E93;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x5404;&#x79CD;http&#x8BF7;&#x6C42;&#xFF0C;&#x4EE5;&#x53CA;&#x8BBE;&#x7F6E;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x4E3B;&#x8981;&#x7528;&#x6765;&#x53D1;&#x8D77;&#x8BF7;&#x6C42;&#xFF0C;&#x53E6;&#x5916;&#x6709;&#x4E2A;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x70B9;&#x662F;&#xFF0C;&#x6211;&#x662F;&#x76F4;&#x63A5;&#x770B;&#x7684;&#x4E0B;&#x9762;&#x4E00;&#x5171;&#x6709;6&#x9875;&#xFF0C;&#x4F46;&#x662F;&#x5728;URLBuilder&#x4E2D;&#x662F;&#x5E26;&#x6709;&#x5F02;&#x5E38;&#x7684;&#xFF0C;&#x5F53;&#x9875;&#x7801;&#x51FA;&#x9519;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x9875;&#x9762;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x53CD;&#x9988;&#x5F02;&#x5E38;&#xFF09;&#x540E;&#x53EF;&#x4EE5;&#x6355;&#x83B7;&#x5F02;&#x5E38;&#x6765;&#x5904;&#x7406;&#x7ED3;&#x675F;&#x4F4D;&#x7F6E;&#x3002; Jsoup&#x4E00;&#x4E2A;&#x9002;&#x914D;java&#x7684;html&#x6587;&#x6863;&#x89E3;&#x6790;&#x5DE5;&#x5177;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;html&#x8F6C;&#x6362;&#x6210;element&#x7C7B;&#xFF0C;&#x540C;&#x65F6;&#x63D0;&#x4F9B;&#x4E86;&#x83B7;&#x53D6;&#x5143;&#x7D20;&#x5C5E;&#x6027;&#x548C;&#x5C5E;&#x6027;&#x503C;&#xFF0C;&#x5143;&#x7D20;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x5143;&#x7D20;&#x503C;&#x7B49;&#x529F;&#x80FD;&#x3002; &#x5F00;&#x59CB;&#x52A8;&#x624B; &#x9996;&#x5148;&#x662F;&#x62C9;&#x8D77;http&#x7684;get&#x8BF7;&#x6C42;&#xFF0C;&#x7531;&#x4E8E;&#x672C;&#x8EAB;&#x4E0D;&#x9700;&#x8981;&#x53C2;&#x6570;&#xFF0C;&#x5C31;&#x4E0D;&#x5E26;&#x53C2;&#x6570;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x53C2;&#x6570;&#x7684;&#x722C;&#x53D6;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;url.setParameter(key,val)&#x65B9;&#x6CD5;&#x3002;&#x591A;&#x4E2A;&#x53C2;&#x6570;&#x4E4B;&#x95F4;&#x65E0;&#x9700;&#x5E26;&amp; &#x76F4;&#x63A5;&#x591A;&#x8C03;&#x7528;&#x51E0;&#x6B21;&#x65B9;&#x6CD5;&#x5C31;&#x884C; &#x7136;&#x540E;&#x76F4;&#x63A5;&#x5F00;&#x59CB;&#x722C;&#x53D6;&#xFF0C;&#x6211;&#x7528;List&#x628A;&#x6570;&#x636E;&#x88C5;&#x8D77;&#x6765;,&#x56E0;&#x4E3A;&#x65F6;&#x95F4;&#x6BD4;&#x8F83;&#x5C11;&#x6211;&#x5C31;&#x76F4;&#x63A5;&#x5206;&#x6210;&#x6807;&#x9898;&#xFF0C;&#x94FE;&#x63A5;&#xFF0C;&#x8BE6;&#x60C5;&#x4E09;&#x4E2A;&#x90E8;&#x5206;&#x4E86;&#xFF0C;&#x4E0B;&#x9762;&#x7684;&#x8BDD;&#x4E3B;&#x8981;&#x662F;&#x5199;&#x7684;&#x4E0D;&#x592A;&#x597D;&#xFF0C;&#x5E94;&#x8BE5;&#x7528;&#x9012;&#x5F52;&#x53BB;&#x5B8C;&#x6210;&#x722C;&#x53D6;&#x6570;&#x636E;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x53E6;&#x5916;&#x6CA1;&#x505A;&#x591A;&#x7EBF;&#x7A0B;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x53C2;&#x8003;&#x4E00;&#x4E0B;httpclient&#x7684;&#x8FDE;&#x63A5;&#x6C60;&#x548C;&#x591A;&#x7EBF;&#x7A0B;&#x7684;&#x5E94;&#x7528;&#x3002; &#x6700;&#x540E;&#x662F;&#x628A;&#x6570;&#x636E;&#x5B58;&#x6570;&#x636E;&#x5E93;&#x91CC;&#xFF0C;&#x521A;&#x56DE;&#x5F52;java&#x5F88;&#x591A;&#x77E5;&#x8BC6;&#x70B9;&#x90FD;&#x6709;&#x70B9;&#x8BB0;&#x4E0D;&#x8D77;&#x6765;&#x4E86;&#xFF0C;mybatis&#x7684;&#x8BED;&#x6CD5;&#x57FA;&#x672C;&#x5FD8;&#x5F97;&#x5DEE;&#x4E0D;&#x591A;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x8FD8;&#x662F;&#x7528;JDBC&#x9876;&#x4E00;&#x4E0B;&#x5427;&#x3002;&#x7279;&#x522B;&#x63D0;&#x9192;&#x7684;&#x662F;mysql5.8&#x662F;&#x5927;&#x6539;&#x7248;&#x672C;&#xFF0C;&#x9A71;&#x52A8;&#x540D;&#x79F0;&#x5DF2;&#x7ECF;&#x53D8;&#x4E86;&#xFF08;&#x6211;&#x7684;&#x5C31;&#x662F;5.8&#xFF09; &#x540C;&#x65F6;&#x65F6;&#x533A;&#x4E5F;&#x8981;&#x8BBE;&#x7F6E;&#x6210;UTC &#x8FD8;&#x6709;&#x8981;&#x963B;&#x6B62;SSL&#x8BBF;&#x95EE; &#x7136;&#x540E;&#x5C31;&#x662F;&#x5199;sql&#x8BED;&#x53E5;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x8FD9;&#x4E2A;&#x6211;&#x76F8;&#x4FE1;&#x5E94;&#x8BE5;&#x90FD;&#x80FD;&#x770B;&#x5F97;&#x61C2;&#x4E86;&#x3002; &#x7ED3;&#x679C;&#x722C;&#x5230;&#x7684;&#x6570;&#x636E;&#x90FD;&#x5B58;&#x6570;&#x636E;&#x5E93;&#x91CC;&#x5566; &#x770B;&#x770B;&#x5927;&#x4F6C;&#x7684;&#x535A;&#x5BA2;&#x5C31;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#xFF01;&#x5927;&#x4F6C;&#x725B;&#x903C;(&#x7834;&#x97F3;) &#x597D;&#x4E86;&#xFF0C;&#x83AB;&#x4E86;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x4EE3;&#x7801;&#x90FD;&#x5728;&#x8FD9;&#x91CC;&#x4E86;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141package com.sammie.top.test;import org.apache.commons.io.FileUtils;import org.apache.http.client.methods.CloseableHttpResponse;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.utils.URIBuilder;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClients;import org.apache.http.util.EntityUtils;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import org.jsoup.nodes.Element;import org.jsoup.select.Elements;import java.io.File;import java.io.IOException;import java.net.URISyntaxException;import java.net.URL;import java.sql.Connection;import java.sql.DriverManager;import java.sql.PreparedStatement;import java.sql.SQLException;import java.util.ArrayList;import java.util.List;public class CrawlerTest1 { public static void main(String[] args) throws Exception { String baseUrl = &quot;http://zgao.top/page/&quot;; for (int i = 1; i &lt; 7; i++) { doCrawler(baseUrl+i); } } public static void doCrawler(String CrawlerUrl) throws URISyntaxException { //&#x83B7;&#x53D6;httpClient&#x5BF9;&#x8C61; CloseableHttpClient httpClient = HttpClients.createDefault(); //&#x8BBE;&#x7F6E;&#x8BBF;&#x95EE;&#x5730;&#x5740; URIBuilder url = new URIBuilder(CrawlerUrl); //&#x5982;&#x9700;&#x6DFB;&#x52A0;&#x53C2;&#x6570; &#x53EF;&#x4EE5;&#x4F7F;&#x7528;url.setParameter(key,val)&#x65B9;&#x6CD5; HttpGet httpGet = new HttpGet(url.build()); //&#x53D1;&#x8D77;&#x8BF7;&#x6C42; CloseableHttpResponse response = null; try { response = httpClient.execute(httpGet); // &#x89E3;&#x6790; if (response.getStatusLine().getStatusCode()==200){ List &lt;String&gt; title = new ArrayList&lt;String&gt;(); List &lt;String&gt; link = new ArrayList&lt;String&gt;(); List &lt;String&gt; moreContent = new ArrayList&lt;String&gt;(); String content = EntityUtils.toString(response.getEntity(), &quot;utf8&quot;); Document doc = Jsoup.parse(content); Elements titleElements = doc.select(&quot;.entry-title&quot;); Elements moreElements = doc.select(&quot;.more-link&quot;); for (Element element : titleElements) { title.add(element.text()); }// for (String s : title) {// System.out.println(s);// } for (Element moreElement : moreElements) { link.add(moreElement.attr(&quot;href&quot;)); } for (String s : link) { //&#x5229;&#x7528;url&#x518D;&#x722C;&#x53D6;&#x8BE6;&#x60C5;&#x5185;&#x5BB9;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x5199;&#x6B21;&#x4E86;&#xFF0C;&#x6700;&#x597D;&#x7528;&#x9012;&#x5F52;&#x6765;&#x505A;.&#x53E6;&#x5916;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x7528;jsoup&#x7684;&#x65B9;&#x6CD5; &#x4F46;&#x662F;&#x6700;&#x597D;&#x8FD8;&#x662F;&#x7528;httpclient //&#x56E0;&#x4E3A;&#x4E00;&#x822C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x591A;&#x7EBF;&#x7A0B;&#x6216;&#x8005;&#x8981;&#x5747;&#x8861;&#x6765;&#x722C; CloseableHttpClient client = HttpClients.createDefault(); HttpGet httpGet1 = new HttpGet(s); CloseableHttpResponse res = null; res = client.execute(httpGet1); if (res.getStatusLine().getStatusCode()==200){ String result = EntityUtils.toString(res.getEntity(), &quot;utf8&quot;); Document parse = Jsoup.parse(result); //&#x83B7;&#x53D6;&#x8BE6;&#x60C5;&#x6570;&#x636E; String text = parse.select(&quot;.entry-content&quot;).first().text(); moreContent.add(text); client.close(); res.close(); }else{ System.out.println(&quot;&#x51FA;&#x95EE;&#x9898;&#x4E86;&#xFF0C;&#x5E94;&#x8BE5;&#x662F;&#x670D;&#x52A1;&#x5668;&#x95EE;&#x9898;&quot;); } } for (String s : moreContent) { insert(s); } } } catch (IOException e) { e.printStackTrace(); } finally { //&#x5173;&#x95ED;&#x8D44;&#x6E90; try { response.close(); } catch (IOException e) { e.printStackTrace(); } try { httpClient.close(); } catch (IOException e) { e.printStackTrace(); } } } private static Connection getConn() { String driver = &quot;com.mysql.cj.jdbc.Driver&quot;; String url = &quot;jdbc:mysql://localhost:3306/test?characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=UTC&quot;; String username = &quot;root&quot;; String password = &quot;&quot;; Connection conn = null; try { Class.forName(driver); //classLoader,&#x52A0;&#x8F7D;&#x5BF9;&#x5E94;&#x9A71;&#x52A8; try { conn = (Connection) DriverManager.getConnection(url, username, password); } catch (SQLException e) { e.printStackTrace(); } } catch (ClassNotFoundException e) { e.printStackTrace(); } return conn; } private static int insert(String content) { Connection conn = getConn(); int i = 0; String sql = &quot;insert into contentList (content) values(?)&quot;; PreparedStatement pstmt; try { pstmt = (PreparedStatement) conn.prepareStatement(sql); pstmt.setString(1, content); i = pstmt.executeUpdate(); pstmt.close(); conn.close(); } catch (SQLException e) { e.printStackTrace(); } return i; }} &#x53E6;&#x5916;&#x5982;&#x679C;&#x60F3;&#x8981;&#x53BB;&#x4E0B;&#x8F7D;&#x67D0;&#x4E2A;&#x8D44;&#x6E90; &#x8FD9;&#x91CC;&#x6211;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x5199;&#x6CD5;&#xFF1A; 123456789101112public static void downloadHttpUrl(String url, String dir, String fileName) { try { URL httpurl = new URL(url); File dirfile = new File(dir); if (!dirfile.exists()) { dirfile.mkdirs(); } FileUtils.copyURLToFile(httpurl, new File(dir+fileName)); } catch (Exception e) { e.printStackTrace(); } } url&#x662F;&#x7F51;&#x7EDC;&#x5730;&#x5740;,dir&#x662F;&#x8981;&#x4E0B;&#x8F7D;&#x5230;&#x7684;&#x6587;&#x4EF6;&#x5939;&#xFF0C;fileName&#x662F;&#x81EA;&#x5B9A;&#x4E49;&#x6587;&#x4EF6;&#x540D; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"后端","slug":"后端","permalink":"http://b.sammie.top/tags/后端/"},{"name":"爬虫","slug":"爬虫","permalink":"http://b.sammie.top/tags/爬虫/"}]},{"title":"hexo+github搭建个人炫酷博客","date":"2019-03-20T05:19:30.000Z","path":"/posts/3a69ef95/","text":"&#x524D;&#x671F;&#x51C6;&#x5907;: &#x4E00;&#x4E2A;github&#x8D26;&#x53F7; &#x4E00;&#x4E2A;&#x57DF;&#x540D;&#xFF08;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x628A;&#x57DF;&#x540D;&#x5F04;&#x597D;&#x770B;&#x7684;&#x8BDD;&#xFF09; node.js&#x5B89;&#x88C5; git&#x5B89;&#x88C5; git&#x8D26;&#x53F7;&#x6CE8;&#x518C;&#xFF0C;Git&#x5B89;&#x88C5;,Node.js&#x5B89;&#x88C5;&#x8FD9;&#x4E2A;&#x5C31;&#x4E0D;&#x5728;&#x8FD9;&#x91CC;&#x8BF4;&#x4E86;&#xFF0C;&#x8BF7;&#x67E5;&#x770B;&#x8FD9;&#x91CC; hexo&#x5B89;&#x88C5;&#x9996;&#x5148;&#x53BB;&#x81EA;&#x5DF1;&#x7535;&#x8111;&#x4E0A;&#x627E;&#x4E2A;&#x5730;&#x65B9;&#x521B;&#x5EFA;&#x6587;&#x4EF6;&#x5939; &#x5047;&#x8BBE;&#x6211;&#x5728;f:/blog&#x521B;&#x5EFA; &#x5219;&#x8FDB;&#x5165;&#x5230;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#x4E2D; &#x53F3;&#x952E;-&gt;git bash &#x7136;&#x540E;&#x4F1A;&#x6709;&#x4E2A;&#x9ED1;&#x8272;&#x7684;&#x6846;&#x6846; &#x5728;&#x91CC;&#x9762;&#x8F93;&#x5165; npm install -g hexo-cli&#x7B49;&#x5F85;&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#x8F93;&#x5165;&#x521D;&#x59CB;&#x5316;&#x547D;&#x4EE4;: hexo init myblog&#x8FD9;&#x91CC;&#x7684;myblog&#x662F;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x6587;&#x4EF6;&#x5939;&#x540D;&#x5B57; &#x968F;&#x4FBF;&#x53D6; &#x7136;&#x540E;&#x8F93;&#x5165;&#x4E00;&#x4E0B;&#x547D;&#x4EE4;&#xFF08;&#x8FDB;&#x5165;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x5B89;&#x88C5;&#x4F9D;&#x8D56;&#xFF09; cd myblognpm install&#x5B8C;&#x6210;&#x4EE5;&#x4E0A;&#x64CD;&#x4F5C;&#x4EE5;&#x540E; &#x4F60;&#x7684;myblog&#x4E0B;&#x9762;&#x5E94;&#x8BE5;&#x4F1A;&#x5B58;&#x5728;&#x4E00;&#x4E0B;&#x6587;&#x4EF6;&#xFF1A; node_modules: &#x4F9D;&#x8D56;&#x5305; public&#xFF1A;&#x5B58;&#x653E;&#x751F;&#x6210;&#x7684;&#x9875;&#x9762; scaffolds&#xFF1A;&#x751F;&#x6210;&#x6587;&#x7AE0;&#x7684;&#x4E00;&#x4E9B;&#x6A21;&#x677F; source&#xFF1A;&#x7528;&#x6765;&#x5B58;&#x653E;&#x4F60;&#x7684;&#x6587;&#x7AE0; themes&#xFF1A;&#x4E3B;&#x9898; _config.yml: &#x535A;&#x5BA2;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6; &#x5982;&#x679C;&#x4F60;&#x60F3;&#x5148;&#x770B;&#x4E00;&#x4E0B;&#x6548;&#x679C; &#x53EF;&#x4EE5;&#x8F93;&#x5165;&#x4E00;&#x4E0B;&#x547D;&#x4EE4;: hexo ghexo server&#x6B64;&#x65F6;&#x6253;&#x5F00;&#x6D4F;&#x89C8;&#x5668; &#x8F93;&#x5165;localhost:4000 &#x5982;&#x679C;&#x80FD;&#x770B;&#x5230;&#x4E2D;&#x95F4;&#x6709;&#x4E2A;Hexo&#x5B57;&#x6837;&#x7684;&#x535A;&#x5BA2; &#x5C31;&#x4EE3;&#x8868;&#x4F60;&#x6210;&#x529F;&#x4E86; &#x5229;&#x7528;GitHub&#x4E2A;&#x4EBA;&#x4ED3;&#x5E93;&#x521B;&#x5EFA;&#x6570;&#x636E;&#x5B58;&#x50A8; &#x5148;&#x53BB;&#x767B;&#x9646;GitHub &#x7136;&#x540E;&#x53EF;&#x4EE5;&#x770B;&#x5230;New repository &#x65B0;&#x5EFA;&#x4ED3;&#x5E93; &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x548C;&#x4F60;&#x7528;&#x6237;&#x540D;&#x76F8;&#x540C;&#x7684;&#x4ED3;&#x5E93;&#xFF0C;&#x5373; &#x4F60;&#x7684;github&#x7528;&#x6237;&#x540D;.github.io(&#x8FD9;&#x4E00;&#x6B65;&#x52A1;&#x5FC5;&#x4FDD;&#x8BC1;&#x7528;&#x6237;&#x540D;&#x76F8;&#x540C;,&#x6BD4;&#x5982;&#x6211;&#x7684;:szysammie.github.io,&#x5426;&#x5219;&#x540E;&#x7EED;&#x65E0;&#x6CD5;&#x5339;&#x914D;,&#x53E6;&#x5916;&#x4FDD;&#x8BC1;&#x4E0B;&#x9762;&#x7684;&#x9009;&#x9879;&#x662F;public,&#x6700;&#x540E;&#x70B9;&#x51FB;create repository) &#x751F;&#x6210;SSH&#x5E76;&#x4E14;&#x6DFB;&#x52A0;&#x5230;GitHub &#x56DE;&#x5230;&#x4F60;&#x7684;git bash&#x90A3;&#x4E2A;&#x9ED1;&#x6846;&#x6846;&#x91CC;&#x9762; &#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;: git config &#x2013;global user.name &#x201C;&#x4F60;&#x7684;github&#x7528;&#x6237;&#x540D;&#x201D;git config &#x2013;global user.email &#x201C;&#x4F60;&#x7684;github&#x7ED1;&#x5B9A;&#x7684;&#x90AE;&#x7BB1;&#x201D; ssh-keygen -t rsa -C &#x201C;&#x4F60;&#x7684;github&#x7ED1;&#x5B9A;&#x7684;&#x90AE;&#x7BB1;&#x201D; &#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x4F1A;&#x5728;&#x4F60;&#x7684;&#x7535;&#x8111;&#x4E0B;&#x9762;&#x751F;&#x6210;&#x4E00;&#x4E2A;.ssh&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x8DEF;&#x5F84;&#x4E00;&#x822C;&#x662F;&#x5728;c:/user/&#x5F53;&#x524D;&#x7CFB;&#x7EDF;&#x7528;&#x6237;&#x540D;/.ssh &#x8BB0;&#x4E8B;&#x672C;&#x6253;&#x5F00;id_rsa.pub&#xFF0C;&#x590D;&#x5236;&#x91CC;&#x9762;&#x7684;&#x5185;&#x5BB9; &#x53BB;&#x4F60;&#x7684;github&#x8D26;&#x53F7;&#x8BBE;&#x7F6E;&#x4E2D;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x70B9;&#x4F60;&#x7684;&#x5934;&#x50CF;&#xFF09;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;Setting,&#x9009;&#x62E9;&#x5DE6;&#x8FB9;&#x7684;SSH and GPG keys&#xFF0C;&#x53F3;&#x8FB9;Title&#x968F;&#x4FBF;&#x5199;&#xFF0C;&#x628A;&#x7B2C;4&#x6B65;&#x4E2D;&#x590D;&#x5236;&#x7684;&#x5185;&#x5BB9;&#x7C98;&#x8D34;&#x5230;&#x4E0B;&#x9762;&#x7684;Key&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x70B9;&#x51FB;Add SSH key &#x6D4B;&#x8BD5;&#x4E00;&#x4E0B;&#x6210;&#x529F;&#x6CA1;&#xFF1A; ssh -T git@github.com &#x5982;&#x679C;&#x8FD4;&#x56DE;&#x7C7B;&#x4F3C;&#x8FD9;&#x6837;&#x7684;&#x4FE1;&#x606F; &#x5219;&#x662F;&#x6210;&#x529F;&#x4E86;:Hi szysammie! You&#x2019;ve successfully authenticated, but GitHub does not provide shell access. &#x628A;hexo&#x5173;&#x8054;&#x5230;GitHub &#x6253;&#x5F00;&#x4F60;&#x7684;myblog&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;&#x53EB;_config.yml&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x62C9;&#x5230;&#x6700;&#x4E0B;&#x9762;&#x53BB;&#xFF0C;&#x4FEE;&#x6539;&#x4E00;&#x4E0B;&#x4FE1;&#x606F;: deploy:type: gitrepo: https://github.com/&#x4F60;&#x7684;github&#x7528;&#x6237;&#x540D;/&#x4F60;&#x7684;github&#x7528;&#x6237;&#x540D;.github.io.gitbranch: master &#x7136;&#x540E;&#x4F9D;&#x7136;&#x662F;git bash &#x8F93;&#x5165;&#x4E0B;&#x9762;&#x7684;&#x547D;&#x4EE4;&#xFF08;&#x5B89;&#x88C5;&#x63D2;&#x4EF6; &#x4EE5;&#x540E;&#x5199;&#x4F5C;&#x90FD;&#x7528;&#x547D;&#x4EE4;&#x6765;&#x63A8;&#x4E0A;github&#xFF09; npm install hexo-deployer-git &#x2013;save &#x7136;&#x540E;&#x4F60;&#x5C31;&#x53EF;&#x4EE5;&#x8F93;&#x5165;&#x4E00;&#x4E0B;&#x7684;&#x547D;&#x4EE4;&#x6765;&#x63A8;&#x4E0A;github&#x4E86;&#xFF01; hexo cleanhexo ghexo d &#x547D;&#x4EE4;&#x89E3;&#x91CA;: hexo clean&#x4EE3;&#x8868;&#x6E05;&#x9664;&#x6389;&#x4F60;&#x4E4B;&#x524D;&#x7684;&#x4E00;&#x4E9B;&#x516C;&#x5171;&#x6587;&#x4EF6;&#x5939; hexo g&#x4EE3;&#x8868;&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x7AE0; hexo d&#x4EE3;&#x8868;&#x90E8;&#x7F72;&#x4F60;&#x7684;&#x6587;&#x7AE0;&#x5230;github&#x4E0A;&#x53BB; &#x6CE8;&#x610F;:&#x5728;hexo d&#x7684;&#x65F6;&#x5019; &#x4F1A;&#x8BA9;&#x4F60;&#x8F93;&#x5165;&#x4F60;&#x7684;github&#x8D26;&#x53F7;&#x548C;&#x5BC6;&#x7801; &#x5982;&#x679C;&#x4F60;&#x770B;&#x5230;&#x4EE5;&#x4E0B;&#x4FE1;&#x606F;&#x5C31;&#x4EE3;&#x8868;&#x4F60;&#x6210;&#x529F;&#x4E86;&#xFF0C;&#x8FC7;&#x4E00;&#x4F1A;&#x513F;&#x4F60;&#x5C31;&#x53EF;&#x4EE5;&#x5728;http://&#x4F60;&#x7684;github&#x7528;&#x6237;&#x540D;.github.io&#x8BBF;&#x95EE;&#x5230;&#x4F60;&#x535A;&#x5BA2;&#x4E86;: Brach &#x2018;master&#x2019; set up to track remote branch &#x2018;master&#x2019; from &apos;git@github.com&#x2018;:&#x4F60;&#x7684;github&#x7528;&#x6237;&#x540D;.github.io &#x8BBE;&#x7F6E;&#x4E2A;&#x4EBA;&#x57DF;&#x540D;&#x4F60;&#x73B0;&#x5728;&#x535A;&#x5BA2;&#x7684;&#x57DF;&#x540D;&#x4E3A;yourname(github&#x8D26;&#x53F7;,&#x4E0B;&#x540C;).github.io &#x4F46;&#x662F;&#x5982;&#x679C;&#x4F60;&#x89C9;&#x5F97;&#x8FD9;&#x4E2A;&#x7F51;&#x5740;&#x7684;&#x903C;&#x683C;&#x8FD8;&#x4E0D;&#x591F;&#xFF0C;&#x6BD4;&#x5982;&#x50CF;&#x6211;&#x8FD9;&#x4E2A;:b.sammie.top&#xFF0C;&#x4F60;&#x5C31;&#x9700;&#x8981;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x4E2A;&#x4EBA;&#x57DF;&#x540D;&#xFF0C;&#x57DF;&#x540D;&#x7684;&#x8D2D;&#x4E70;&#x5C31;&#x4E0D;&#x8BF4;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x63A8;&#x8350;&#x963F;&#x91CC;&#x4E91;&#x7684;&#x3002; &#x4EE5;&#x963F;&#x91CC;&#x4E91;&#x4E3E;&#x4F8B;&#xFF0C;&#x5148;&#x53BB;&#x5B9E;&#x540D;&#x8BA4;&#x8BC1;&#xFF0C;&#x7136;&#x540E;&#x5230;&#x4F60;&#x7684;&#x57DF;&#x540D;&#x7BA1;&#x7406;&#x4E0B;&#x53BB;&#x70B9;&#x89E3;&#x6790;&#xFF0C;&#x7136;&#x540E;&#x70B9;&#x6DFB;&#x52A0;&#x89E3;&#x6790;&#xFF0C;&#x5206;&#x522B;&#x6DFB;&#x52A0;&#x4E24;&#x6761;&#xFF0C;&#x8BB0;&#x5F55;&#x7C7B;&#x578B;&#x90FD;&#x586B;A&#x8BB0;&#x5F55;&#xFF0C;&#x4E3B;&#x673A;&#x8BB0;&#x5F55;&#x90FD;&#x586B;@&#xFF0C;&#x89E3;&#x6790;&#x7EBF;&#x8DEF;&#x9009;&#x62E9;&#x9ED8;&#x8BA4;&#xFF0C;&#x8BB0;&#x5F55;&#x503C;&#x5206;&#x522B;&#x662F;192.30.252.154&#x548C;192.30.252.153&#x8FD9;&#x4E2A;&#x662F;github&#x7684;&#x670D;&#x52A1;&#x5668;&#x5730;&#x5740; &#x56DE;&#x5230;GitHub&#xFF0C;&#x8FDB;&#x5165;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x4ED3;&#x5E93;&#xFF0C;&#x70B9;&#x51FB;settings,&#x62C9;&#x5230;&#x4E0B;&#x9762;&#x8BBE;&#x7F6E;Custom domain &#x8F93;&#x5165;&#x4F60;&#x7684;&#x57DF;&#x540D;,&#x6BD4;&#x5982;&#x6211;&#x7684;b.sammie.top &#x6700;&#x540E;&#x5728;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x9762;&#xFF0C;&#x53BB;&#x627E;&#x5230;source,&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x540D;&#x5B57;&#x662F;CNAME&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x4E3B;&#x8981;&#x540E;&#x7F00;&#x540D;&#xFF0C;&#x91CC;&#x9762;&#x7684;&#x5185;&#x5BB9;&#x53EA;&#x586B;&#x5199;&#x4F60;&#x7684;&#x57DF;&#x540D;&#xFF08;&#x6BD4;&#x5982;b.sammie.top&#xFF09;&#xFF0C;&#x4FDD;&#x5B58;&#x7684;&#x65F6;&#x5019;&#x4FDD;&#x5B58;&#x683C;&#x5F0F;&#x4E3A;&#x6240;&#x6709;&#x6587;&#x4EF6;&#xFF01;&#x8BB0;&#x4F4F;&#xFF0C;&#x5343;&#x4E07;&#x4E0D;&#x80FD;&#x662F;&#x4EFB;&#x4F55;&#x5F62;&#x5F0F;&#x7684;&#x6587;&#x4EF6;&#xFF01; &#x7136;&#x540E;&#x5728;gitbash&#x4E2D;&#x8F93;&#x5165; hexo cleanhexo ghexo d &#x8FC7;&#x4E00;&#x4F1A;&#x513F;&#x53BB;&#x8BBF;&#x95EE;&#x4F60;&#x7684;&#x57DF;&#x540D;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x535A;&#x5BA2;&#x4E86;&#x3002; &#x5199;&#x4F5C;:&#x7531;&#x4E8E;hexo&#x91C7;&#x7528;&#x7684;&#x662F;markdown&#x7684;&#x5199;&#x4F5C;&#x6A21;&#x5F0F;&#xFF0C;&#x6240;&#x4EE5;&#x4F60;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; hexo new newpaper &#x6765;&#x521B;&#x5EFA;&#x4E00;&#x7BC7;&#x65B0;&#x7684;&#x6587;&#x7AE0; newpaper&#x662F;&#x6587;&#x4EF6;&#x540D;&#xFF08;&#x4E0D;&#x662F;&#x6587;&#x7AE0;&#x6807;&#x9898;&#xFF09;&#x4EA7;&#x751F;&#x7684;.md&#x6587;&#x4EF6;&#x5B58;&#x5728;&#x4E8E;source/_posts&#x4E0B; &#x6253;&#x5F00;md&#x5C31;&#x53EF;&#x4EE5;&#x7F16;&#x8F91;&#x6587;&#x7AE0;&#x5566; &#x5177;&#x4F53;&#x7684;markdown&#x8BED;&#x6CD5;&#x8BF7;&#x81EA;&#x884C;&#x767E;&#x5EA6; &#x8FD9;&#x91CC;&#x6211;&#x63A8;&#x8350;&#x6211;&#x4F7F;&#x7528;&#x7684;markdown&#x7F16;&#x8F91;&#x5668;: Typora &#x66F4;&#x6362;&#x4E3B;&#x9898;&#xFF1A;&#x8FD9;&#x4E2A;&#x5C31;&#x7B80;&#x76F4;&#x975E;&#x5E38;&#x7684;&#x68D2;&#x4E86; Hexo&#x5B98;&#x65B9;&#x63D0;&#x4F9B;&#x4E86;&#x5F88;&#x591A;&#x4E3B;&#x9898;&#xFF0C;&#x4F46;&#x6211;&#x89C9;&#x5F97;&#x90FD;&#x4E0D;&#x662F;&#x5F88;&#x597D;&#x770B;&#xFF0C;&#x6211;&#x73B0;&#x5728;&#x4F7F;&#x7528;&#x7684;&#x8FD9;&#x4E2A;&#x662F;&#x6765;&#x81EA;github&#x4E0A;&#x4E00;&#x4E2A;&#x5927;&#x4E09;&#x540C;&#x5B66;&#x7684;&#x4E3B;&#x9898;&#xFF0C;&#x5730;&#x5740;&#x5728;&#x8FD9;&#x91CC; &#x66F4;&#x6362;&#x8FD9;&#x4E2A;&#x4E3B;&#x9898;&#x7684;&#x6240;&#x6709;&#x64CD;&#x4F5C;&#x5728;&#x4ED6;&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x7684;&#x6587;&#x6863;&#x4E2D;&#x5DF2;&#x7ECF;&#x5199;&#x7684;&#x5F88;&#x597D;&#x4E86;&#xFF0C;&#x8BF7;&#x81EA;&#x884C;&#x53C2;&#x8003;&#x4F7F;&#x7528;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x5728;&#x8BBE;&#x7F6E;hexo&#x7684;_config.yml&#x7684;&#x65F6;&#x5019; &#x6709;&#x4E2A;&#x5C5E;&#x6027;&#x662F;&#x8BBE;&#x7F6E;&#x8BED;&#x8A00; &#x4E5F;&#x5C31;&#x662F;language: &#x8FD9;&#x91CC;&#x4E00;&#x5B9A;&#x8981;&#x8BBE;&#x7F6E;&#x6210;zh-CN&#x624D;&#x8868;&#x793A;&#x4E2D;&#x6587; &#x5F00;&#x542F;&#x9177;&#x70AB;&#x7684;live2d&#x5982;&#x679C;&#x4F60;&#x5728;PC&#x7AEF;&#x6D4F;&#x89C8;&#x6211;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x5DE6;&#x8FB9;&#x770B;&#x5230;&#x4E00;&#x4E2A;&#x5F88;&#x53EF;&#x7231;&#x7684;&#x732B;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;live2d &#x5728;hexo&#x4E0A;&#x6709;&#x63D2;&#x4EF6;&#xFF0C;&#x6559;&#x7A0B;&#x5728;&#x8FD9;&#x91CC; &#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x4E00;&#x70B9;&#x662F;&#xFF1A;&#x5728;&#x914D;&#x7F6E;live2d&#x7684;&#x76F8;&#x5173;&#x5C5E;&#x6027;&#x7684;&#x65F6;&#x5019;&#xFF0C;mobile&#x4E2D;&#x7684;show&#x5C5E;&#x6027;&#x5EFA;&#x8BAE;&#x6539;&#x4E3A;false &#x8FD9;&#x4E2A;&#x4EE3;&#x8868;&#x7684;&#x610F;&#x601D;&#x662F;live2d&#x6A21;&#x578B;&#x5728;&#x79FB;&#x52A8;&#x7AEF;&#x662F;&#x4E0D;&#x663E;&#x793A;&#xFF0C;&#x56E0;&#x4E3A;&#x6A21;&#x578B;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x5728;&#x79FB;&#x52A8;&#x7AEF;&#x663E;&#x793A;&#x4F1A;&#x5F88;&#x96BE;&#x770B;&#x3002; &#x5F00;&#x542F;&#x8BC4;&#x8BBA;&#x548C;&#x8BA1;&#x6570;&#x529F;&#x80FD; &#x5728;&#x4F60;&#x5B8C;&#x6210;tomotaes&#x4E3B;&#x9898;&#x7684;&#x66F4;&#x6362;&#x4EE5;&#x540E;&#xFF0C;&#x5728;themes/tomotoes&#x4E0B;&#x6709;&#x4E2A;_config.yml&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x6253;&#x5F00;&#x5B83;&#xFF0C;&#x5F80;&#x4E0B;&#x62C9;&#xFF0C;&#x627E;&#x5230;valine&#x5C5E;&#x6027;&#xFF1A;&#x4FEE;&#x6539;&#x91CC;&#x9762;&#x7684;appId&#x548C;appKey,&#x8FD9;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x662F;valine&#x5E94;&#x7528;&#x7684;&#x503C;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x70B9;&#x8FD9;&#x91CC;&#x53BB;&#x6CE8;&#x518C;&#x4E00;&#x4E2A;&#x8D26;&#x53F7;&#x7136;&#x540E;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x5F97;&#x5230;. &#x8BA1;&#x6570;&#x529F;&#x80FD;&#x9700;&#x8981;&#x5728;themes\\tomotoes\\&#x4E2D;&#x7684;_config.yml&#x4E0B;&#x76F4;&#x63A5;&#x914D;&#x7F6E;&#x4EE5;&#x4E0B;&#x5C5E;&#x6027;&#xFF1A; visit_counter: site_pv: &#x8BBF;&#x95EE;&#x6B21;&#x6570;&#xFF1A;&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt; &lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;&lt;/span&gt; site_uv: &#x8BBF;&#x95EE;&#x7528;&#x6237;&#xFF1A; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"hexo","slug":"hexo","permalink":"http://b.sammie.top/tags/hexo/"},{"name":"搭建","slug":"搭建","permalink":"http://b.sammie.top/tags/搭建/"}]}]